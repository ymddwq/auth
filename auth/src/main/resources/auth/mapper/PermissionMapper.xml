<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="auth.mapper.PermissionMapper">
  
  <resultMap id="BaseResultMap" type="auth.model.Permission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="menuId" jdbcType="INTEGER" property="menuid" />
    <result column="REVISION" jdbcType="INTEGER" property="revision" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy" />
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_auth_permission where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByPrimaryKeys" parameterType="java.lang.Integer">
    delete from user_auth_permission where id in 
    <foreach item="item" collection="list" open="(" separator="," close=")">
    	#{item}
    </foreach>
  </delete>
  
  <delete id="deleteRolePermissionByPermissionId" parameterType="java.lang.Integer">
    delete from user_auth_role_permission where permissionId = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="auth.model.Permission">
    insert into user_auth_permission (id, enabled, name, 
      url, menuId, REVISION, 
      CREATED_BY, CREATED_TIME, UPDATED_BY, 
      UPDATED_TIME)
    values (#{id,jdbcType=INTEGER}, #{enabled,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{menuid,jdbcType=INTEGER}, #{revision,jdbcType=INTEGER}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="auth.model.Permission">
    update user_auth_permission
    set enabled = #{enabled,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      menuId = #{menuid,jdbcType=INTEGER},
      REVISION = #{revision,jdbcType=INTEGER},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, enabled, name, url, menuId, REVISION, CREATED_BY, CREATED_TIME, UPDATED_BY, 
    UPDATED_TIME
    from user_auth_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKeys"  resultMap="BaseResultMap">
    select id, enabled, name, url, menuId, REVISION, CREATED_BY, CREATED_TIME, UPDATED_BY, 
    UPDATED_TIME
    from user_auth_permission
    where menuId in 
    <foreach item="item" collection="list" open="(" separator="," close=")">
    	#{item}
    </foreach>
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select id, enabled, name, url, menuId, REVISION, CREATED_BY, CREATED_TIME, UPDATED_BY, 
    UPDATED_TIME
    from user_auth_permission
  </select>
  
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
	select id, enabled, name
	from user_auth_permission
	where name = #{name}
  </select>
  
  <select id="selectPermissionsByRoleId" parameterType="java.lang.Integer">
    select uap.id
    from user_auth_permission uap 
    inner join user_auth_role_permission uarp on uap.id = uarp.permissionId
    where uarp.roleId = #{roleId}
  </select>
  
</mapper>