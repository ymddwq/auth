<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="auth.mapper.RoleMapper">
  
  <resultMap id="BaseResultMap" type="auth.model.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="REVISION" jdbcType="INTEGER" property="revision" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy" />
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_auth_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteRolePermissionByRoleId" parameterType="java.lang.Integer">
    delete from user_auth_role_permission where roleId = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="auth.model.Role">
    insert into user_auth_role (id, name, enabled, 
      REVISION, CREATED_BY, CREATED_TIME, 
      UPDATED_BY, UPDATED_TIME)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, 
      #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertRolePermissions" parameterType="auth.model.RolePermission">
    insert into user_auth_role_permission (roleId, permissionId, REVISION, CREATED_BY, CREATED_TIME)
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    (#{item.roleId},#{item.permissionId},#{item.revision}, #{item.createdBy}, #{item.createdTime})
    </foreach>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="auth.model.Role">
    update user_auth_role
    set name = #{name,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      REVISION = #{revision,jdbcType=INTEGER},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, enabled, REVISION, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME
    from user_auth_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, enabled, REVISION, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME
    from user_auth_role
  </select>
  
  <select id="selectPermissionsByRoleId" resultType="auth.model.Permission">
  	select uap.id, uap.name 
  	from user_auth_permission uap 
  	left join user_auth_role_permission uarp on uap.id = uarp.permissionId
  	where uarp.roleId = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
	select id, enabled, name
	from user_auth_role
	where name = #{name}
  </select>
  
</mapper>