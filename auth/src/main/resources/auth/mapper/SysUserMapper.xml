<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="auth.mapper.SysUserMapper">
  
  <resultMap id="BaseResultMap" type="auth.model.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="REVISION" jdbcType="INTEGER" property="revision" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy" />
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_auth_sys_user where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteSysUserRoleBySysUserId" parameterType="java.lang.Integer">
    delete from user_auth_sys_user_role where userId = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="auth.model.SysUser">
    insert into user_auth_sys_user (id, name, password, 
      enabled, REVISION, CREATED_BY, CREATED_TIME
      )
    values (
      #{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=INTEGER}, #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <insert id="insertSysUserRoles" parameterType="auth.model.SysUserRole">
    insert into user_auth_sys_user_role (userId, roleId, REVISION, CREATED_BY, CREATED_TIME)
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    (#{item.userId},#{item.roleId},#{item.revision}, #{item.createdBy}, #{item.createdTime})
    </foreach>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="auth.model.SysUser">
    update user_auth_sys_user
    set name = #{name,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      REVISION = #{revision,jdbcType=INTEGER},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, enabled, REVISION, CREATED_BY, CREATED_TIME, UPDATED_BY, 
    UPDATED_TIME
    from user_auth_sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, enabled, REVISION, CREATED_BY, CREATED_TIME, UPDATED_BY, 
    UPDATED_TIME
    from user_auth_sys_user
  </select>
  
  <select id="selectSysUserByNameAndPassword" resultMap="BaseResultMap">
    select id, name, password from user_auth_sys_user
    where name = #{name} and password = #{password}
  </select>
  
  <select id="selectPermissionsBySysUserId" resultType="auth.model.SysUserPermission">
    select uasu.id userId, uasu.name userName, uap.id permissionId, uap.name permissionName, uap.url
    from user_auth_sys_user uasu
    left join user_auth_sys_user_role uasur on uasu.id = uasur.userId
    left join user_auth_role uar on uasur.roleId = uar.id
    left join user_auth_role_permission uarp on uarp.roleId = uar.id
    left join user_auth_permission uap on uap.id = uarp.permissionId
    where uasu.id = #{userId}
  </select>
  
</mapper>